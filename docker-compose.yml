name: nextjs-dev-env

services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:16-alpine
    platform: linux/arm64/v8
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    platform: linux/arm64/v8
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy

  mongodb:
    image: mongodb/mongodb-community-server:7.0-arm64
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017 --quiet
      interval: 5s
      timeout: 5s
      retries: 5

  mongo-express:
    image: mongo-express:latest
    platform: linux/arm64/v8
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017/
    ports:
      - "8081:8081"
    depends_on:
      mongodb:
        condition: service_healthy

  redis:
    image: redis:7.2-alpine
    command: redis-server --appendonly yes
    platform: linux/arm64/v8
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: redis-cli ping
      interval: 5s
      timeout: 5s
      retries: 5

  redis-commander:
    image: rediscommander/redis-commander:latest
    platform: linux/arm64/v8
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8082:8081"
    depends_on:
      redis:
        condition: service_healthy

  localstack:
    image: localstack/localstack:latest
    platform: linux/arm64/v8
    environment:
      - DEBUG=${DEBUG-}
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - EDGE_PORT=4566
      - SERVICES=s3
      - DATA_DIR=/tmp/localstack/data
      - PERSISTENCE=1
    ports:
      - "4566:4566"
    volumes:
      - ./docker/scripts:/docker-entrypoint-initaws.d
      - ./localstack:/tmp/localstack
      - "/var/run/docker.sock:/var/run/docker.sock"

  mailhog:
    image: mailhog/mailhog:latest
    platform: linux/arm64/v8
    ports:
      - "1025:1025"
      - "8025:8025"

volumes:
  postgres_data:
  mongo_data:
  redis_data: